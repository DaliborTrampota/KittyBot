/*
 * This file is generated by jOOQ.
 */
package de.kittybot.kittybot.jooq.tables;


import de.kittybot.kittybot.jooq.Keys;
import de.kittybot.kittybot.jooq.Public;
import de.kittybot.kittybot.jooq.tables.records.BotDisabledChannelsRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;

import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class BotDisabledChannels extends TableImpl<BotDisabledChannelsRecord>{

	/**
	 * The reference instance of <code>public.bot_disabled_channels</code>
	 */
	public static final BotDisabledChannels BOT_DISABLED_CHANNELS = new BotDisabledChannels();
	private static final long serialVersionUID = 1L;
	/**
	 * The column <code>public.bot_disabled_channels.guild_id</code>.
	 */
	public final TableField<BotDisabledChannelsRecord, Long> GUILD_ID = createField(DSL.name("guild_id"), SQLDataType.BIGINT.nullable(false), this, "");
	/**
	 * The column <code>public.bot_disabled_channels.channel_id</code>.
	 */
	public final TableField<BotDisabledChannelsRecord, Long> CHANNEL_ID = createField(DSL.name("channel_id"), SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * Create an aliased <code>public.bot_disabled_channels</code> table reference
	 */
	public BotDisabledChannels(String alias){
		this(DSL.name(alias), BOT_DISABLED_CHANNELS);
	}

	private BotDisabledChannels(Name alias, Table<BotDisabledChannelsRecord> aliased){
		this(alias, aliased, null);
	}

	private BotDisabledChannels(Name alias, Table<BotDisabledChannelsRecord> aliased, Field<?>[] parameters){
		super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
	}

	/**
	 * Create an aliased <code>public.bot_disabled_channels</code> table reference
	 */
	public BotDisabledChannels(Name alias){
		this(alias, BOT_DISABLED_CHANNELS);
	}

	/**
	 * Create a <code>public.bot_disabled_channels</code> table reference
	 */
	public BotDisabledChannels(){
		this(DSL.name("bot_disabled_channels"), null);
	}

	public <O extends Record> BotDisabledChannels(Table<O> child, ForeignKey<O, BotDisabledChannelsRecord> key){
		super(child, key, BOT_DISABLED_CHANNELS);
	}

	@Override
	public BotDisabledChannels as(String alias){
		return new BotDisabledChannels(DSL.name(alias), this);
	}

	@Override
	public Schema getSchema(){
		return Public.PUBLIC;
	}

	@Override
	public UniqueKey<BotDisabledChannelsRecord> getPrimaryKey(){
		return Keys.BOT_DISABLED_CHANNELS_PKEY;
	}

	@Override
	public List<UniqueKey<BotDisabledChannelsRecord>> getKeys(){
		return Arrays.<UniqueKey<BotDisabledChannelsRecord>>asList(Keys.BOT_DISABLED_CHANNELS_PKEY);
	}

	@Override
	public Row2<Long, Long> fieldsRow(){
		return (Row2) super.fieldsRow();
	}

	@Override
	public BotDisabledChannels as(Name alias){
		return new BotDisabledChannels(alias, this);
	}

	/**
	 * Rename this table
	 */
	@Override
	public BotDisabledChannels rename(String name){
		return new BotDisabledChannels(DSL.name(name), null);
	}

	/**
	 * Rename this table
	 */
	@Override
	public BotDisabledChannels rename(Name name){
		return new BotDisabledChannels(name, null);
	}

	// -------------------------------------------------------------------------
	// Row2 type methods
	// -------------------------------------------------------------------------

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<BotDisabledChannelsRecord> getRecordType(){
		return BotDisabledChannelsRecord.class;
	}

}
