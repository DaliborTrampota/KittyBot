/*
 * This file is generated by jOOQ.
 */
package de.kittybot.kittybot.jooq.tables;


import de.kittybot.kittybot.jooq.Keys;
import de.kittybot.kittybot.jooq.Public;
import de.kittybot.kittybot.jooq.tables.records.BotIgnoredUsersRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BotIgnoredUsers extends TableImpl<BotIgnoredUsersRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.bot_ignored_users</code>
     */
    public static final BotIgnoredUsers BOT_IGNORED_USERS = new BotIgnoredUsers();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BotIgnoredUsersRecord> getRecordType() {
        return BotIgnoredUsersRecord.class;
    }

    /**
     * The column <code>public.bot_ignored_users.bot_ignored_user_id</code>.
     */
    public final TableField<BotIgnoredUsersRecord, Long> BOT_IGNORED_USER_ID = createField(DSL.name("bot_ignored_user_id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>public.bot_ignored_users.guild_id</code>.
     */
    public final TableField<BotIgnoredUsersRecord, Long> GUILD_ID = createField(DSL.name("guild_id"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.bot_ignored_users.user_id</code>.
     */
    public final TableField<BotIgnoredUsersRecord, Long> USER_ID = createField(DSL.name("user_id"), SQLDataType.BIGINT.nullable(false), this, "");

    private BotIgnoredUsers(Name alias, Table<BotIgnoredUsersRecord> aliased) {
        this(alias, aliased, null);
    }

    private BotIgnoredUsers(Name alias, Table<BotIgnoredUsersRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.bot_ignored_users</code> table reference
     */
    public BotIgnoredUsers(String alias) {
        this(DSL.name(alias), BOT_IGNORED_USERS);
    }

    /**
     * Create an aliased <code>public.bot_ignored_users</code> table reference
     */
    public BotIgnoredUsers(Name alias) {
        this(alias, BOT_IGNORED_USERS);
    }

    /**
     * Create a <code>public.bot_ignored_users</code> table reference
     */
    public BotIgnoredUsers() {
        this(DSL.name("bot_ignored_users"), null);
    }

    public <O extends Record> BotIgnoredUsers(Table<O> child, ForeignKey<O, BotIgnoredUsersRecord> key) {
        super(child, key, BOT_IGNORED_USERS);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public Identity<BotIgnoredUsersRecord, Long> getIdentity() {
        return (Identity<BotIgnoredUsersRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<BotIgnoredUsersRecord> getPrimaryKey() {
        return Keys.BOT_IGNORED_USERS_PKEY;
    }

    @Override
    public List<UniqueKey<BotIgnoredUsersRecord>> getKeys() {
        return Arrays.<UniqueKey<BotIgnoredUsersRecord>>asList(Keys.BOT_IGNORED_USERS_PKEY);
    }

    @Override
    public List<ForeignKey<BotIgnoredUsersRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<BotIgnoredUsersRecord, ?>>asList(Keys.BOT_IGNORED_USERS__BOT_IGNORED_USERS_GUILD_ID_FKEY);
    }

    public Guilds guilds() {
        return new Guilds(this, Keys.BOT_IGNORED_USERS__BOT_IGNORED_USERS_GUILD_ID_FKEY);
    }

    @Override
    public BotIgnoredUsers as(String alias) {
        return new BotIgnoredUsers(DSL.name(alias), this);
    }

    @Override
    public BotIgnoredUsers as(Name alias) {
        return new BotIgnoredUsers(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public BotIgnoredUsers rename(String name) {
        return new BotIgnoredUsers(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public BotIgnoredUsers rename(Name name) {
        return new BotIgnoredUsers(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, Long, Long> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
