/*
 * This file is generated by jOOQ.
 */
package de.kittybot.kittybot.jooq.tables;


import de.kittybot.kittybot.jooq.Keys;
import de.kittybot.kittybot.jooq.Public;
import de.kittybot.kittybot.jooq.tables.records.GuildsRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.YearToSecond;

import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class Guilds extends TableImpl<GuildsRecord>{

	/**
	 * The reference instance of <code>public.guilds</code>
	 */
	public static final Guilds GUILDS = new Guilds();
	private static final long serialVersionUID = 1L;
	/**
	 * The column <code>public.guilds.guild_id</code>.
	 */
	public final TableField<GuildsRecord, Long> GUILD_ID = createField(DSL.name("guild_id"), SQLDataType.BIGINT.nullable(false), this, "");
	/**
	 * The column <code>public.guilds.command_prefix</code>.
	 */
	public final TableField<GuildsRecord, String> COMMAND_PREFIX = createField(DSL.name("command_prefix"), SQLDataType.VARCHAR(8).nullable(false), this, "");
	/**
	 * The column <code>public.guilds.announcement_channel_id</code>.
	 */
	public final TableField<GuildsRecord, Long> ANNOUNCEMENT_CHANNEL_ID = createField(DSL.name("announcement_channel_id"), SQLDataType.BIGINT.nullable(false), this, "");
	/**
	 * The column <code>public.guilds.request_channel_id</code>.
	 */
	public final TableField<GuildsRecord, Long> REQUEST_CHANNEL_ID = createField(DSL.name("request_channel_id"), SQLDataType.BIGINT.nullable(false).defaultValue(DSL.field("'-1'::integer", SQLDataType.BIGINT)), this, "");
	/**
	 * The column <code>public.guilds.requests_enabled</code>.
	 */
	public final TableField<GuildsRecord, Boolean> REQUESTS_ENABLED = createField(DSL.name("requests_enabled"), SQLDataType.BOOLEAN.nullable(false).defaultValue(DSL.field("false", SQLDataType.BOOLEAN)), this, "");
	/**
	 * The column <code>public.guilds.join_message</code>.
	 */
	public final TableField<GuildsRecord, String> JOIN_MESSAGE = createField(DSL.name("join_message"), SQLDataType.CLOB.nullable(false).defaultValue(DSL.field("'Welcome ${user}!'::text", SQLDataType.CLOB)), this, "");
	/**
	 * The column <code>public.guilds.join_messages_enabled</code>.
	 */
	public final TableField<GuildsRecord, Boolean> JOIN_MESSAGES_ENABLED = createField(DSL.name("join_messages_enabled"), SQLDataType.BOOLEAN.nullable(false).defaultValue(DSL.field("false", SQLDataType.BOOLEAN)), this, "");
	/**
	 * The column <code>public.guilds.leave_message</code>.
	 */
	public final TableField<GuildsRecord, String> LEAVE_MESSAGE = createField(DSL.name("leave_message"), SQLDataType.CLOB.nullable(false).defaultValue(DSL.field("'Bye ${user}!'::text", SQLDataType.CLOB)), this, "");
	/**
	 * The column <code>public.guilds.leave_messages_enabled</code>.
	 */
	public final TableField<GuildsRecord, Boolean> LEAVE_MESSAGES_ENABLED = createField(DSL.name("leave_messages_enabled"), SQLDataType.BOOLEAN.nullable(false).defaultValue(DSL.field("false", SQLDataType.BOOLEAN)), this, "");
	/**
	 * The column <code>public.guilds.log_channel_id</code>.
	 */
	public final TableField<GuildsRecord, Long> LOG_CHANNEL_ID = createField(DSL.name("log_channel_id"), SQLDataType.BIGINT.nullable(false).defaultValue(DSL.field("'-1'::integer", SQLDataType.BIGINT)), this, "");
	/**
	 * The column <code>public.guilds.log_messages_enabled</code>.
	 */
	public final TableField<GuildsRecord, Boolean> LOG_MESSAGES_ENABLED = createField(DSL.name("log_messages_enabled"), SQLDataType.BOOLEAN.nullable(false).defaultValue(DSL.field("false", SQLDataType.BOOLEAN)), this, "");
	/**
	 * The column <code>public.guilds.nsfw_enabled</code>.
	 */
	public final TableField<GuildsRecord, Boolean> NSFW_ENABLED = createField(DSL.name("nsfw_enabled"), SQLDataType.BOOLEAN.nullable(false).defaultValue(DSL.field("true", SQLDataType.BOOLEAN)), this, "");
	/**
	 * The column <code>public.guilds.inactive_role_id</code>.
	 */
	public final TableField<GuildsRecord, Long> INACTIVE_ROLE_ID = createField(DSL.name("inactive_role_id"), SQLDataType.BIGINT.nullable(false).defaultValue(DSL.field("'-1'::integer", SQLDataType.BIGINT)), this, "");
	/**
	 * The column <code>public.guilds.inactive_duration</code>.
	 */
	public final TableField<GuildsRecord, YearToSecond> INACTIVE_DURATION = createField(DSL.name("inactive_duration"), SQLDataType.INTERVAL.nullable(false), this, "");
	/**
	 * The column <code>public.guilds.dj_role_id</code>.
	 */
	public final TableField<GuildsRecord, Long> DJ_ROLE_ID = createField(DSL.name("dj_role_id"), SQLDataType.BIGINT.nullable(false).defaultValue(DSL.field("'-1'::integer", SQLDataType.BIGINT)), this, "");
	/**
	 * The column <code>public.guilds.snipes_enabled</code>.
	 */
	public final TableField<GuildsRecord, Boolean> SNIPES_ENABLED = createField(DSL.name("snipes_enabled"), SQLDataType.BOOLEAN.nullable(false).defaultValue(DSL.field("true", SQLDataType.BOOLEAN)), this, "");

	/**
	 * Create an aliased <code>public.guilds</code> table reference
	 */
	public Guilds(String alias){
		this(DSL.name(alias), GUILDS);
	}

	private Guilds(Name alias, Table<GuildsRecord> aliased){
		this(alias, aliased, null);
	}

	private Guilds(Name alias, Table<GuildsRecord> aliased, Field<?>[] parameters){
		super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
	}

	/**
	 * Create an aliased <code>public.guilds</code> table reference
	 */
	public Guilds(Name alias){
		this(alias, GUILDS);
	}

	/**
	 * Create a <code>public.guilds</code> table reference
	 */
	public Guilds(){
		this(DSL.name("guilds"), null);
	}

	public <O extends Record> Guilds(Table<O> child, ForeignKey<O, GuildsRecord> key){
		super(child, key, GUILDS);
	}

	@Override
	public Guilds as(String alias){
		return new Guilds(DSL.name(alias), this);
	}

	@Override
	public Schema getSchema(){
		return Public.PUBLIC;
	}

	@Override
	public UniqueKey<GuildsRecord> getPrimaryKey(){
		return Keys.GUILDS_PKEY;
	}

	@Override
	public List<UniqueKey<GuildsRecord>> getKeys(){
		return Arrays.<UniqueKey<GuildsRecord>>asList(Keys.GUILDS_PKEY);
	}

	@Override
	public Row16<Long, String, Long, Long, Boolean, String, Boolean, String, Boolean, Long, Boolean, Boolean, Long, YearToSecond, Long, Boolean> fieldsRow(){
		return (Row16) super.fieldsRow();
	}

	@Override
	public Guilds as(Name alias){
		return new Guilds(alias, this);
	}

	/**
	 * Rename this table
	 */
	@Override
	public Guilds rename(String name){
		return new Guilds(DSL.name(name), null);
	}

	/**
	 * Rename this table
	 */
	@Override
	public Guilds rename(Name name){
		return new Guilds(name, null);
	}

	// -------------------------------------------------------------------------
	// Row16 type methods
	// -------------------------------------------------------------------------

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<GuildsRecord> getRecordType(){
		return GuildsRecord.class;
	}

}
