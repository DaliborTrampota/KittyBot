/*
 * This file is generated by jOOQ.
 */
package de.kittybot.kittybot.jooq.tables;


import de.kittybot.kittybot.jooq.Keys;
import de.kittybot.kittybot.jooq.Public;
import de.kittybot.kittybot.jooq.tables.records.BotIgnoredMembersRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BotIgnoredMembers extends TableImpl<BotIgnoredMembersRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.bot_ignored_members</code>
     */
    public static final BotIgnoredMembers BOT_IGNORED_MEMBERS = new BotIgnoredMembers();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BotIgnoredMembersRecord> getRecordType() {
        return BotIgnoredMembersRecord.class;
    }

    /**
     * The column <code>public.bot_ignored_members.id</code>.
     */
    public final TableField<BotIgnoredMembersRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>public.bot_ignored_members.guild_id</code>.
     */
    public final TableField<BotIgnoredMembersRecord, Long> GUILD_ID = createField(DSL.name("guild_id"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.bot_ignored_members.user_id</code>.
     */
    public final TableField<BotIgnoredMembersRecord, Long> USER_ID = createField(DSL.name("user_id"), SQLDataType.BIGINT.nullable(false), this, "");

    private BotIgnoredMembers(Name alias, Table<BotIgnoredMembersRecord> aliased) {
        this(alias, aliased, null);
    }

    private BotIgnoredMembers(Name alias, Table<BotIgnoredMembersRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.bot_ignored_members</code> table reference
     */
    public BotIgnoredMembers(String alias) {
        this(DSL.name(alias), BOT_IGNORED_MEMBERS);
    }

    /**
     * Create an aliased <code>public.bot_ignored_members</code> table reference
     */
    public BotIgnoredMembers(Name alias) {
        this(alias, BOT_IGNORED_MEMBERS);
    }

    /**
     * Create a <code>public.bot_ignored_members</code> table reference
     */
    public BotIgnoredMembers() {
        this(DSL.name("bot_ignored_members"), null);
    }

    public <O extends Record> BotIgnoredMembers(Table<O> child, ForeignKey<O, BotIgnoredMembersRecord> key) {
        super(child, key, BOT_IGNORED_MEMBERS);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public Identity<BotIgnoredMembersRecord, Long> getIdentity() {
        return (Identity<BotIgnoredMembersRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<BotIgnoredMembersRecord> getPrimaryKey() {
        return Keys.BOT_IGNORED_MEMBERS_PKEY;
    }

    @Override
    public List<UniqueKey<BotIgnoredMembersRecord>> getKeys() {
        return Arrays.<UniqueKey<BotIgnoredMembersRecord>>asList(Keys.BOT_IGNORED_MEMBERS_PKEY);
    }

    @Override
    public List<ForeignKey<BotIgnoredMembersRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<BotIgnoredMembersRecord, ?>>asList(Keys.BOT_IGNORED_MEMBERS__BOT_IGNORED_MEMBERS_GUILD_ID_FKEY);
    }

    public Guilds guilds() {
        return new Guilds(this, Keys.BOT_IGNORED_MEMBERS__BOT_IGNORED_MEMBERS_GUILD_ID_FKEY);
    }

    @Override
    public BotIgnoredMembers as(String alias) {
        return new BotIgnoredMembers(DSL.name(alias), this);
    }

    @Override
    public BotIgnoredMembers as(Name alias) {
        return new BotIgnoredMembers(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public BotIgnoredMembers rename(String name) {
        return new BotIgnoredMembers(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public BotIgnoredMembers rename(Name name) {
        return new BotIgnoredMembers(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, Long, Long> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
