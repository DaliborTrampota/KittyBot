/*
 * This file is generated by jOOQ.
 */
package de.kittybot.kittybot.jooq.tables;


import de.kittybot.kittybot.jooq.Keys;
import de.kittybot.kittybot.jooq.Public;
import de.kittybot.kittybot.jooq.tables.records.GuildInvitesRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GuildInvites extends TableImpl<GuildInvitesRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.guild_invites</code>
     */
    public static final GuildInvites GUILD_INVITES = new GuildInvites();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GuildInvitesRecord> getRecordType() {
        return GuildInvitesRecord.class;
    }

    /**
     * The column <code>public.guild_invites.id</code>.
     */
    public final TableField<GuildInvitesRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>public.guild_invites.guild_id</code>.
     */
    public final TableField<GuildInvitesRecord, Long> GUILD_ID = createField(DSL.name("guild_id"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.guild_invites.code</code>.
     */
    public final TableField<GuildInvitesRecord, String> CODE = createField(DSL.name("code"), SQLDataType.VARCHAR(8).nullable(false), this, "");

    private GuildInvites(Name alias, Table<GuildInvitesRecord> aliased) {
        this(alias, aliased, null);
    }

    private GuildInvites(Name alias, Table<GuildInvitesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.guild_invites</code> table reference
     */
    public GuildInvites(String alias) {
        this(DSL.name(alias), GUILD_INVITES);
    }

    /**
     * Create an aliased <code>public.guild_invites</code> table reference
     */
    public GuildInvites(Name alias) {
        this(alias, GUILD_INVITES);
    }

    /**
     * Create a <code>public.guild_invites</code> table reference
     */
    public GuildInvites() {
        this(DSL.name("guild_invites"), null);
    }

    public <O extends Record> GuildInvites(Table<O> child, ForeignKey<O, GuildInvitesRecord> key) {
        super(child, key, GUILD_INVITES);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public Identity<GuildInvitesRecord, Long> getIdentity() {
        return (Identity<GuildInvitesRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<GuildInvitesRecord> getPrimaryKey() {
        return Keys.GUILD_INVITES_PKEY;
    }

    @Override
    public List<UniqueKey<GuildInvitesRecord>> getKeys() {
        return Arrays.<UniqueKey<GuildInvitesRecord>>asList(Keys.GUILD_INVITES_PKEY, Keys.GUILD_INVITES_GUILD_ID_CODE_KEY, Keys.GUILD_INVITES_CODE_KEY);
    }

    @Override
    public List<ForeignKey<GuildInvitesRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<GuildInvitesRecord, ?>>asList(Keys.GUILD_INVITES__GUILD_INVITES_GUILD_ID_FKEY);
    }

    public Guilds guilds() {
        return new Guilds(this, Keys.GUILD_INVITES__GUILD_INVITES_GUILD_ID_FKEY);
    }

    @Override
    public GuildInvites as(String alias) {
        return new GuildInvites(DSL.name(alias), this);
    }

    @Override
    public GuildInvites as(Name alias) {
        return new GuildInvites(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public GuildInvites rename(String name) {
        return new GuildInvites(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public GuildInvites rename(Name name) {
        return new GuildInvites(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, Long, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
