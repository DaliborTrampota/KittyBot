/*
 * This file is generated by jOOQ.
 */
package de.kittybot.kittybot.jooq.tables.records;


import de.kittybot.kittybot.jooq.tables.ReactiveMessages;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ReactiveMessagesRecord extends UpdatableRecordImpl<ReactiveMessagesRecord> implements Record7<Long, Long, Long, Long, Long, String, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.reactive_messages.id</code>.
     */
    public ReactiveMessagesRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.reactive_messages.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.reactive_messages.guild_id</code>.
     */
    public ReactiveMessagesRecord setGuildId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.reactive_messages.guild_id</code>.
     */
    public Long getGuildId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.reactive_messages.user_id</code>.
     */
    public ReactiveMessagesRecord setUserId(Long value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.reactive_messages.user_id</code>.
     */
    public Long getUserId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>public.reactive_messages.channel_id</code>.
     */
    public ReactiveMessagesRecord setChannelId(Long value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.reactive_messages.channel_id</code>.
     */
    public Long getChannelId() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>public.reactive_messages.message_id</code>.
     */
    public ReactiveMessagesRecord setMessageId(Long value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.reactive_messages.message_id</code>.
     */
    public Long getMessageId() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>public.reactive_messages.command_path</code>.
     */
    public ReactiveMessagesRecord setCommandPath(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.reactive_messages.command_path</code>.
     */
    public String getCommandPath() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.reactive_messages.allowed</code>.
     */
    public ReactiveMessagesRecord setAllowed(Long value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.reactive_messages.allowed</code>.
     */
    public Long getAllowed() {
        return (Long) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Long, Long, Long, Long, Long, String, Long> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Long, Long, Long, Long, Long, String, Long> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return ReactiveMessages.REACTIVE_MESSAGES.ID;
    }

    @Override
    public Field<Long> field2() {
        return ReactiveMessages.REACTIVE_MESSAGES.GUILD_ID;
    }

    @Override
    public Field<Long> field3() {
        return ReactiveMessages.REACTIVE_MESSAGES.USER_ID;
    }

    @Override
    public Field<Long> field4() {
        return ReactiveMessages.REACTIVE_MESSAGES.CHANNEL_ID;
    }

    @Override
    public Field<Long> field5() {
        return ReactiveMessages.REACTIVE_MESSAGES.MESSAGE_ID;
    }

    @Override
    public Field<String> field6() {
        return ReactiveMessages.REACTIVE_MESSAGES.COMMAND_PATH;
    }

    @Override
    public Field<Long> field7() {
        return ReactiveMessages.REACTIVE_MESSAGES.ALLOWED;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getGuildId();
    }

    @Override
    public Long component3() {
        return getUserId();
    }

    @Override
    public Long component4() {
        return getChannelId();
    }

    @Override
    public Long component5() {
        return getMessageId();
    }

    @Override
    public String component6() {
        return getCommandPath();
    }

    @Override
    public Long component7() {
        return getAllowed();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getGuildId();
    }

    @Override
    public Long value3() {
        return getUserId();
    }

    @Override
    public Long value4() {
        return getChannelId();
    }

    @Override
    public Long value5() {
        return getMessageId();
    }

    @Override
    public String value6() {
        return getCommandPath();
    }

    @Override
    public Long value7() {
        return getAllowed();
    }

    @Override
    public ReactiveMessagesRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public ReactiveMessagesRecord value2(Long value) {
        setGuildId(value);
        return this;
    }

    @Override
    public ReactiveMessagesRecord value3(Long value) {
        setUserId(value);
        return this;
    }

    @Override
    public ReactiveMessagesRecord value4(Long value) {
        setChannelId(value);
        return this;
    }

    @Override
    public ReactiveMessagesRecord value5(Long value) {
        setMessageId(value);
        return this;
    }

    @Override
    public ReactiveMessagesRecord value6(String value) {
        setCommandPath(value);
        return this;
    }

    @Override
    public ReactiveMessagesRecord value7(Long value) {
        setAllowed(value);
        return this;
    }

    @Override
    public ReactiveMessagesRecord values(Long value1, Long value2, Long value3, Long value4, Long value5, String value6, Long value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ReactiveMessagesRecord
     */
    public ReactiveMessagesRecord() {
        super(ReactiveMessages.REACTIVE_MESSAGES);
    }

    /**
     * Create a detached, initialised ReactiveMessagesRecord
     */
    public ReactiveMessagesRecord(Long id, Long guildId, Long userId, Long channelId, Long messageId, String commandPath, Long allowed) {
        super(ReactiveMessages.REACTIVE_MESSAGES);

        setId(id);
        setGuildId(guildId);
        setUserId(userId);
        setChannelId(channelId);
        setMessageId(messageId);
        setCommandPath(commandPath);
        setAllowed(allowed);
    }
}
